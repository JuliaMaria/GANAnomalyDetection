{
  "primitives": [
    "mlprimitives.custom.timeseries_preprocessing.time_segments_aggregate",
    "sklearn.impute.SimpleImputer",
    "sklearn.preprocessing.MinMaxScaler",
    "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences",
    "orion.primitives.tadgan.TadGAN",
    "orion.primitives.tadgan.score_anomalies",
    "orion.primitives.timeseries_anomalies.find_anomalies"
  ],
  "init_params": {
    "mlprimitives.custom.timeseries_preprocessing.time_segments_aggregate#1": {
      "time_column": "timestamp",
      "interval": 21600,
      "method": "mean"
    },
    "sklearn.preprocessing.MinMaxScaler#1": {
      "feature_range": [
        -1,
        1
      ]
    },
    "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#1": {
      "target_column": 0,
      "window_size": 100,
      "target_size": 1
    },
    "orion.primitives.tadgan.TadGAN#1": {
      "epochs": 35
    },
    "orion.primitives.tadgan.score_anomalies#1": {
      "rec_error_type": "dtw"
    },
    "orion.primitives.timeseries_anomalies.find_anomalies#1": {
      "window_size_portion": 0.33,
      "window_step_size_portion": 0.1,
      "fixed_threshold": true
    }
  },
  "input_names": {
    "orion.primitives.timeseries_anomalies.find_anomalies#1": {
      "index": "index"
    },
    "orion.primitives.tadgan.score_anomalies#1": {
      "y": "X"
    }
  },
  "output_names": {
    "orion.primitives.tadgan.TadGAN#1": {
      "y": "y_hat"
    },
    "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#1": {
      "index": "X_index"
    }
  },
  "hyperparameters": {
    "mlprimitives.custom.timeseries_preprocessing.time_segments_aggregate#1": {
      "interval": 21600,
      "time_column": "timestamp",
      "method": "mean"
    },
    "sklearn.impute.SimpleImputer#1": {
      "missing_values": NaN,
      "fill_value": null,
      "verbose": false,
      "copy": true,
      "strategy": "mean"
    },
    "sklearn.preprocessing.MinMaxScaler#1": {
      "feature_range": [
        -1,
        1
      ],
      "copy": true
    },
    "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#1": {
      "window_size": 100,
      "target_size": 1,
      "step_size": 1,
      "target_column": 0,
      "drop_windows": false
    },
    "orion.primitives.tadgan.TadGAN#1": {
      "epochs": 70,
      "shape": [
        100,
        1
      ],
      "optimizer": "keras.optimizers.Adam",
      "learning_rate": 0.0005,
      "latent_dim": 20,
      "batch_size": 64,
      "iterations_critic": 5,
      "encoder_input_shape": [
        100,
        1
      ],
      "generator_input_shape": [
        20,
        1
      ],
      "critic_x_input_shape": [
        100,
        1
      ],
      "critic_z_input_shape": [
        20,
        1
      ],
      "encoder_reshape_shape": [
        20,
        1
      ],
      "generator_reshape_shape": [
        50,
        1
      ],
      "layers_encoder": [
        {
          "class": "keras.layers.Bidirectional",
          "parameters": {
            "layer": {
              "class": "keras.layers.LSTM",
              "parameters": {
                "units": 100,
                "return_sequences": true
              }
            }
          }
        },
        {
          "class": "keras.layers.Flatten",
          "parameters": {}
        },
        {
          "class": "keras.layers.Dense",
          "parameters": {
            "units": 20
          }
        },
        {
          "class": "keras.layers.Reshape",
          "parameters": {
            "target_shape": "encoder_reshape_shape"
          }
        }
      ],
      "layers_generator": [
        {
          "class": "keras.layers.Flatten",
          "parameters": {}
        },
        {
          "class": "keras.layers.Dense",
          "parameters": {
            "units": 50
          }
        },
        {
          "class": "keras.layers.Reshape",
          "parameters": {
            "target_shape": "generator_reshape_shape"
          }
        },
        {
          "class": "keras.layers.Bidirectional",
          "parameters": {
            "layer": {
              "class": "keras.layers.LSTM",
              "parameters": {
                "units": 64,
                "return_sequences": true,
                "dropout": 0.2,
                "recurrent_dropout": 0.2
              }
            },
            "merge_mode": "concat"
          }
        },
        {
          "class": "keras.layers.convolutional.UpSampling1D",
          "parameters": {
            "size": 2
          }
        },
        {
          "class": "keras.layers.Bidirectional",
          "parameters": {
            "layer": {
              "class": "keras.layers.LSTM",
              "parameters": {
                "units": 64,
                "return_sequences": true,
                "dropout": 0.2,
                "recurrent_dropout": 0.2
              }
            },
            "merge_mode": "concat"
          }
        },
        {
          "class": "keras.layers.TimeDistributed",
          "parameters": {
            "layer": {
              "class": "keras.layers.Dense",
              "parameters": {
                "units": 1
              }
            }
          }
        },
        {
          "class": "keras.layers.Activation",
          "parameters": {
            "activation": "tanh"
          }
        }
      ],
      "layers_critic_x": [
        {
          "class": "keras.layers.Conv1D",
          "parameters": {
            "filters": 64,
            "kernel_size": 5
          }
        },
        {
          "class": "keras.layers.advanced_activations.LeakyReLU",
          "parameters": {
            "alpha": 0.2
          }
        },
        {
          "class": "keras.layers.Dropout",
          "parameters": {
            "rate": 0.25
          }
        },
        {
          "class": "keras.layers.Conv1D",
          "parameters": {
            "filters": 64,
            "kernel_size": 5
          }
        },
        {
          "class": "keras.layers.advanced_activations.LeakyReLU",
          "parameters": {
            "alpha": 0.2
          }
        },
        {
          "class": "keras.layers.Dropout",
          "parameters": {
            "rate": 0.25
          }
        },
        {
          "class": "keras.layers.Conv1D",
          "parameters": {
            "filters": 64,
            "kernel_size": 5
          }
        },
        {
          "class": "keras.layers.advanced_activations.LeakyReLU",
          "parameters": {
            "alpha": 0.2
          }
        },
        {
          "class": "keras.layers.Dropout",
          "parameters": {
            "rate": 0.25
          }
        },
        {
          "class": "keras.layers.Conv1D",
          "parameters": {
            "filters": 64,
            "kernel_size": 5
          }
        },
        {
          "class": "keras.layers.advanced_activations.LeakyReLU",
          "parameters": {
            "alpha": 0.2
          }
        },
        {
          "class": "keras.layers.Dropout",
          "parameters": {
            "rate": 0.25
          }
        },
        {
          "class": "keras.layers.Flatten",
          "parameters": {}
        },
        {
          "class": "keras.layers.Dense",
          "parameters": {
            "units": 1
          }
        }
      ],
      "layers_critic_z": [
        {
          "class": "keras.layers.Flatten",
          "parameters": {}
        },
        {
          "class": "keras.layers.Dense",
          "parameters": {
            "units": 100
          }
        },
        {
          "class": "keras.layers.advanced_activations.LeakyReLU",
          "parameters": {
            "alpha": 0.2
          }
        },
        {
          "class": "keras.layers.Dropout",
          "parameters": {
            "rate": 0.2
          }
        },
        {
          "class": "keras.layers.Dense",
          "parameters": {
            "units": 100
          }
        },
        {
          "class": "keras.layers.advanced_activations.LeakyReLU",
          "parameters": {
            "alpha": 0.2
          }
        },
        {
          "class": "keras.layers.Dropout",
          "parameters": {
            "rate": 0.2
          }
        },
        {
          "class": "keras.layers.Dense",
          "parameters": {
            "units": 1
          }
        }
      ]
    },
    "orion.primitives.tadgan.score_anomalies#1": {
      "rec_error_type": "dtw",
      "score_window": 10,
      "critic_smooth_window": null,
      "error_smooth_window": null,
      "comb": "mult",
      "lambda_rec": 0.5
    },
    "orion.primitives.timeseries_anomalies.find_anomalies#1": {
      "z_range": [
        0,
        12
      ],
      "window_size": 2000,
      "window_step_size": 200,
      "lower_threshold": false,
      "fixed_threshold": true,
      "window_size_portion": 0.33,
      "window_step_size_portion": 0.1,
      "min_percent": 0.13,
      "anomaly_padding": 50
    }
  },
  "tunable_hyperparameters": {
    "mlprimitives.custom.timeseries_preprocessing.time_segments_aggregate#1": {},
    "sklearn.impute.SimpleImputer#1": {
      "strategy": {
        "type": "str",
        "default": "mean",
        "values": [
          "mean",
          "median",
          "most_frequent",
          "constant"
        ]
      }
    },
    "sklearn.preprocessing.MinMaxScaler#1": {},
    "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#1": {},
    "orion.primitives.tadgan.TadGAN#1": {},
    "orion.primitives.tadgan.score_anomalies#1": {
      "score_window": {
        "type": "int",
        "default": 10,
        "range": [
          2,
          200
        ]
      },
      "critic_smooth_window": {
        "type": "int",
        "default": null,
        "range": [
          2,
          400
        ]
      },
      "error_smooth_window": {
        "type": "int",
        "default": null,
        "range": [
          2,
          400
        ]
      },
      "comb": {
        "type": "str",
        "default": "mult",
        "options": [
          "mult",
          "sum",
          "rec"
        ]
      },
      "lambda_rec": {
        "type": "float",
        "default": 0.5,
        "range": [
          0.1,
          0.9
        ]
      }
    },
    "orion.primitives.timeseries_anomalies.find_anomalies#1": {
      "min_percent": {
        "type": "float",
        "default": 0.13,
        "range": [
          0.01,
          0.9
        ]
      },
      "anomaly_padding": {
        "type": "int",
        "default": 50,
        "range": [
          0,
          400
        ]
      }
    }
  },
  "outputs": {
    "default": [
      {
        "name": "y",
        "type": "ndarray",
        "variable": "orion.primitives.timeseries_anomalies.find_anomalies#1.y"
      }
    ]
  }
}